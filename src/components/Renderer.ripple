import { NotFound } from '../components/NotFound.ripple';
import { RoutesContext } from '../contexts/RoutesContext.ripple';
import { NavigationContext } from '../contexts/NavigationContext.ripple';
import { initializedGuard } from '../utils/initializedGuard';
import { formatPath } from '../utils/formatPath';
import { matchPath } from '../utils/matchPath';
import { getParams } from '../utils/getParams';
import { SYMBOLS } from '../constants';

export component Renderer() {
    const routes = RoutesContext.get();

    // Get location pathname
    const locationPathname = NavigationContext.get().pathname;
    const locationPathFragments = formatPath(locationPathname);

    // Match path
    let routeMatched = false;
    for (const route of routes.keys()) {
        const routePathFragments = formatPath(route);
        const routeParams = getParams(routePathFragments, locationPathFragments);

        const $element = routes.get(route);

        if (matchPath(routePathFragments, locationPathFragments)) {
            <$element params={routeParams} />
            routeMatched = true;
        }
    }

    if (!routeMatched) {
        const CustomNotFound = routes.get(SYMBOLS.CATCH_ALL);

        if (CustomNotFound) {
            <CustomNotFound />
        } else {
            <NotFound />
        }
    }
}